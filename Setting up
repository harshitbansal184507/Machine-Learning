SETTING UP A DIRECTORY (directory refers to a folder or a location in the file system where files and subdirectories can be stored.)
make a directory -> mkdir environments
go to that directory  -> cd environments


Making Virtual Environments 
( a virtual environment is a self-contained directory that contains a Python interpreter and a set of libraries specific to a particular project.
This allows you to isolate project dependencies and avoid conflicts with the global Python environment.)
(. In a virtual environment, you need to install the required packages separately for each project. 
Each virtual environment is isolated from the global Python environment and other virtual environments,
so they have their own set of dependencies.)

use ->Virtual environments enable you to have an isolated space on your server
for Python projects, ensuring that each of your projects can have its own
set of dependencies that wonâ€™t disrupt any of your other projects.

how to create it in a directory ->python -m venv my_env   //my_env is the name of the environment 
how to activate it --> my_env\Scripts\Activate.ps1  // my-env here is the name of the virtual environment 
how to check v_env is working -> ls my_env (this will show all the changes made to it )

HOW VENV WORKS --> 
When a Python interpreter is running from a virtual environment, sys.prefix and sys.exec_prefix point to the directories of the virtual environment, whereas sys.base_prefix and sys.base_exec_prefix point to those of the base Python used to create the environment. It is sufficient to check sys.prefix != sys.base_prefix to determine if the current interpreter is running from a virtual environment.


Creating files -> (simply create it on desktop)
running them - >python path/of/the/file








